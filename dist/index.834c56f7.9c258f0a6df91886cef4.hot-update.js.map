{"version":3,"file":"index.834c56f7.9c258f0a6df91886cef4.hot-update.js","sources":["/Users/myungyeonlee/pshelper-extension/src/popup/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport styled from 'styled-components';\nimport Switch from \"../common/components/switch\";\n\nclass Popup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      algorithmIsToggled : false,\n      highlightIsToggled : false,\n      keywordIsToggled : false,\n    };\n  };\n\n  setIsToggled() {\n    this.setState((event) => {\n      chrome.extension.getBackgroundPage().console.log(event);\n      \n    });\n  }\n\n  // FIXME: state doesn't change\n\n  setAlgorithmIsToggled(flag) {\n    this.setState(() => {\n      if (flag) this.algorithmIsToggled = false;\n      else this.algorithmIsToggled = true;\n      chrome.extension.getBackgroundPage().console.log(\"setAlgorithmIsToggled\");\n      chrome.extension.getBackgroundPage().console.log(this.state);\n    });\n    \n    chrome.tabs.sendMessage({object: {action: \"postAnalyzeAlgorithm\"}}, function(response) {\n      chrome.extension.getBackgroundPage().console.log(response);\n    });\n  }\n\n  setHighLightIsToggled(flag) {\n    this.setState(() => {\n      if (flag) this.highlightIsToggled = false;\n      else this.highlightIsToggled = true;\n      chrome.extension.getBackgroundPage().console.log(\"setHighLightIsToggled\");\n      chrome.extension.getBackgroundPage().console.log(this.state);\n\n      chrome.tabs.sendMessage({object: {action: \"postHighlight\"}}, function(response) {\n        chrome.extension.getBackgroundPage().console.log(response);\n      });\n    });\n  }\n\n  setKeywordIsToggled(flag) {\n    this.setState(() => {\n      if (flag) this.coreIsToggled = false;\n      else this.coreIsToggled = true;\n      chrome.extension.getBackgroundPage().console.log(\"setCoreIsToggled\");\n      chrome.extension.getBackgroundPage().console.log(this.state);\n\n      chrome.tabs.sendMessage({object: {action: \"postKeyword\"}}, function(response) {\n        chrome.extension.getBackgroundPage().console.log(response);\n      });\n    });\n  }\n\n  componentDidMount() {\n    /*global chrome*/\n    // chrome.tabs.getSelected(null, function(tab) {\n    //   chrome.tabs.sendMessage(tab.id, { action: \"getDOM\" }, function(response) {\n    //     if (response) {\n    //       chrome.extension.getBackgroundPage().console.log(response['description']);\n    //       chrome.extension.getBackgroundPage().console.log(response['input']);\n    //       chrome.extension.getBackgroundPage().console.log(response['output']);\n    //     } else {\n    //       chrome.extension.getBackgroundPage().console.log(\"EMPTY\");\n    //     }\n    //   });\n    // });\n}\n  render() {\n    const Footer = styled.footer`\n      display: block;\n      text-align: center;\n      font-size: 10px;\n      maring-top: 10px;\n      `;\n\n    return (\n      <div className=\"Popup\">\n        <div className=\"Popup-body\">\n          <div className=\"App-logo\">\n            <div className=\"Logo\">PSHELPER</div>\n            <div className=\"Logo-sub\">2021</div>\n          </div>\n          <div className=\"Input\">\n            <div className=\"Swich-body\">\n              알고리즘 분류 확인\n              <Switch\n                id=\"var-switch\"\n                toggled={this.state.algorithmIsToggled}\n                onChange={e => this.setAlgorithmIsToggled(this.state.algorithmIsToggled)}          \n              />\n            </div>\n            <div className=\"Swich-body\">\n              하이라이팅 기능\n              <Switch\n                id=\"hilight-switch\"\n                toggled={this.state.highlightIsToggled}\n                onChange={e => this.setHighLightIsToggled(this.state.highlightIsToggled)}          \n              />\n            </div>\n            <div className=\"Swich-body\">\n              핵심 단어 체크 기능\n              <Switch\n                id=\"core-switch\"\n                toggled={this.state.keywordIsToggled}\n                onChange={e => this.setKeywordIsToggled(this.state.keywordIsToggled)}          \n              />\n            </div>\n          </div>\n          <Footer>© 2021 50625, Inc. All right reserved.</Footer>\n        </div>\n    </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <Popup />,\n  document.getElementById(\"root\")\n);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAGA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAGA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAjBA;AAAA;AAAA;AAAA;AAAA;AA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AA/BA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAoCA;AACA;AAtHA;AACA;AAuHA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}