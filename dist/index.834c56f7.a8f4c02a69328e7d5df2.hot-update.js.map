{"version":3,"file":"index.834c56f7.a8f4c02a69328e7d5df2.hot-update.js","sources":["/Users/myungyeonlee/pshelper-extension/src/popup/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport styled from 'styled-components';\nimport Switch from \"../common/components/switch\";\n\nclass Popup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      algorithmIsToggled : false,\n      highlightIsToggled : false,\n      keywordIsToggled : false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n  };\n\n  handleChange(checked) {\n    this.setState({ checked });\n  }\n\n  // FIXME: state doesn't change\n\n  setAlgorithmIsToggled(flag) {\n    this.setState(() => {\n      if (flag) this.algorithmIsToggled = false;\n      else this.algorithmIsToggled = true;\n      chrome.extension.getBackgroundPage().console.log(\"setAlgorithmIsToggled\");\n      chrome.extension.getBackgroundPage().console.log(this.state);\n    });\n    \n    chrome.runtime.sendMessage({ action: \"postAnalyzeAlgorithm\"}, function(response) {\n      chrome.extension.getBackgroundPage().console.log(response);\n    });\n  }\n\n  setHighLightIsToggled(flag) {\n    this.setState(() => {\n      if (flag) this.highlightIsToggled = false;\n      else this.highlightIsToggled = true;\n      chrome.extension.getBackgroundPage().console.log(\"setHighLightIsToggled\");\n      chrome.extension.getBackgroundPage().console.log(this.state);\n\n      chrome.runtime.sendMessage({ action: \"postHighlight\"}, function(response) {\n        chrome.extension.getBackgroundPage().console.log(response);\n      });\n    });\n  }\n\n  setKeywordIsToggled(flag) {\n    this.setState(() => {\n      if (flag) this.coreIsToggled = false;\n      else this.coreIsToggled = true;\n      chrome.extension.getBackgroundPage().console.log(\"setKeywordIsToggled\");\n      chrome.extension.getBackgroundPage().console.log(this.state);\n      chrome.runtime.sendMessage({ action: \"postKeyword\"}, function(response) {\n        chrome.extension.getBackgroundPage().console.log(response);\n      });\n    });\n  }\n\n  componentDidMount() {\n    /*global chrome*/\n  }\n\n  render() {\n    const Footer = styled.footer`\n      display: block;\n      text-align: center;\n      font-size: 10px;\n      maring-top: 10px;\n    `;\n\n      \n    const CheckBoxWrapper = styled.div`\n    position: relative;\n    `;\n    const CheckBoxLabel = styled.label`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 42px;\n    height: 26px;\n    border-radius: 15px;\n    background: #bebebe;\n    cursor: pointer;\n    &::after {\n      content: \"\";\n      display: block;\n      border-radius: 50%;\n      width: 18px;\n      height: 18px;\n      margin: 3px;\n      background: #ffffff;\n      box-shadow: 1px 3px 3px 1px rgba(0, 0, 0, 0.2);\n      transition: 0.2s;\n    }\n    `;\n    const CheckBox = styled.input`\n    opacity: 0;\n    z-index: 1;\n    border-radius: 15px;\n    width: 42px;\n    height: 26px;\n    &:checked + ${CheckBoxLabel} {\n      background: rgb(59, 96, 229);\n      &::after {\n        content: \"\";\n        display: block;\n        border-radius: 50%;\n        width: 18px;\n        height: 18px;\n        margin-left: 21px;\n        transition: 0.2s;\n      }\n    }\n    `;\n\n    return (\n      <div className=\"Popup\">\n        <div className=\"Popup-body\">\n          <div className=\"App-logo\">\n            <div className=\"Logo\">PSHELPER</div>\n            <div className=\"Logo-sub\">2021</div>\n          </div>\n          <div className=\"Input\">\n            <div className=\"Swich-body\">\n              알고리즘 분류 확인\n              {/* <Switch\n                id=\"var-switch\"\n                toggled={this.state.algorithmIsToggled}\n                onChange={e => this.setAlgorithmIsToggled(this.state.algorithmIsToggled)}          \n              /> */}\n              <CheckBoxWrapper>\n                <CheckBox id=\"checkbox\" type=\"checkbox\" checked={this.state.algorithmIsToggled} />\n                <CheckBoxLabel htmlFor=\"checkbox\" />\n              </CheckBoxWrapper>\n            </div>\n            <div className=\"Swich-body\">\n              하이라이팅 기능\n              {/* <Switch\n                id=\"hilight-switch\"\n                toggled={this.state.highlightIsToggled}\n                onChange={e => this.setHighLightIsToggled(this.state.highlightIsToggled)}          \n              /> */}\n              <CheckBoxWrapper>\n                <CheckBox id=\"checkbox\" type=\"checkbox\" checked={this.state.highlightIsToggled} />\n                <CheckBoxLabel htmlFor=\"checkbox\" />\n              </CheckBoxWrapper>\n            </div>\n            <div className=\"Swich-body\">\n              핵심 단어 체크 기능\n              {/* <Switch\n                id=\"core-switch\"\n                toggled={this.state.keywordIsToggled}\n                onChange={e => this.setKeywordIsToggled(this.state.keywordIsToggled)}          \n              /> */}\n              <CheckBoxWrapper>\n                <CheckBox id=\"checkbox\" type=\"checkbox\" \n                  checked={this.state.keywordIsToggled}\n                  onChange={this.handleChange}\n                  />\n                <CheckBoxLabel htmlFor=\"checkbox\" />\n              </CheckBoxWrapper>\n            </div>\n          </div>\n          <Footer>© 2021 50625, Inc. All right reserved.</Footer>\n        </div>\n    </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <Popup />,\n  document.getElementById(\"root\")\n);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAOA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAzBA;AAAA;AAAA;AAAA;AAAA;AAyCA;AAAA;AAAA;AAAA;AAAA;AAAA;AA9CA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAmDA;AACA;AArKA;AACA;AAsKA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}